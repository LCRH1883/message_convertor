<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="12,6" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter TargetName="border" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Border x:Name="border"
                                Width="16" Height="16"
                                Margin="0,0,8,0"
                                Background="{DynamicResource ControlBackgroundBrush}"
                                BorderBrush="{DynamicResource ControlBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="3">
                            <Path x:Name="check"
                                  Stretch="Uniform"
                                  Margin="2"
                                  StrokeThickness="2"
                                  StrokeEndLineCap="Round"
                                  StrokeStartLineCap="Round"
                                  Data="M 1 7 L 5 11 L 13 3"
                                  Stroke="{DynamicResource AccentBrush}"
                                  Visibility="Hidden" />
                        </Border>
                        <ContentPresenter VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="check" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
                            <Setter TargetName="check" Property="Stroke" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBackgroundBrush}" />
        <Setter Property="SelectionTextBrush" Value="{DynamicResource SelectionForegroundBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource SelectionForegroundBrush}" />
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource SelectionForegroundBrush}" />
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="Padding" Value="8,4" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectionBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectionForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource ListBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ListForegroundBrush}" />
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ListForegroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ListHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SelectionBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource SelectionForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBorderBrush}" />
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBorderBrush}" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBorderBrush}" />
        <Setter Property="Padding" Value="12,6" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MenuItemHoverBrush}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource MenuItemHighlightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectionForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource MenuBorderBrush}" />
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="Height" Value="1" />
    </Style>

    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{DynamicResource StatusBarBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{DynamicResource ToolbarBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolbarBorderBrush}" />
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource ToolbarBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolbarBorderBrush}" />
    </Style>

    <Style x:Key="ThemedScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ScrollBarThumbHoverBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{DynamicResource ScrollBarThumbPressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThemedScrollBarRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="0" />
        <Setter Property="Width" Value="0" />
    </Style>

    <ControlTemplate x:Key="VerticalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid Background="{DynamicResource ScrollBarTrackBrush}">
            <Track x:Name="PART_Track" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ThemedScrollBarRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ThemedScrollBarThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ThemedScrollBarRepeatButtonStyle}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid Background="{DynamicResource ScrollBarTrackBrush}">
            <Track x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ThemedScrollBarRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ThemedScrollBarThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ThemedScrollBarRepeatButtonStyle}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{DynamicResource ScrollBarTrackBrush}" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Template" Value="{StaticResource VerticalScrollBarTemplate}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="14" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBarTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    </Style>
</ResourceDictionary>
